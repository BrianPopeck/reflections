When would you want to use a remote repository rather than keeping all your work
local?

    When you want to share your project with other people or be able to efficiently work
    on one project from two different machines.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Pulling changes manually might be useful if you are using one local machine to work
    only on a particular set of features, so you don't need a copy of every branch locally.
    This might also make it easier to navigate a smaller local repository rather than the
    entire large repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are used to clone other people's repositories where you don't have
    editing privileges. Clones copy a remote repository (that you have access
    to) to your local machine. A branch creates another path of commits from
    a certain point in time. Use forks with other repositories, clone your own
    repositories and respositories that you have already forked, and create branches
    to compartmentalize your work on a single project.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can use git log and git diff to compare differences between local and remote
    versions. This also is a way to "sync" local and remote versions instantaneously
    without having to deal with merge issues right away.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
